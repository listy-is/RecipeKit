{
  "recipe_id": 7
  "version": 9,
  "engine_version": 5,
  "title": "IMDB Movies",
  "description": "A recipe to get a list of movies",
  "urls": [
    "https://m.imdb.com/title/"
  ],
  "headers": {
    "Accept-Language": "en-UK,en",
    "User-Agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_2) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/81.0.4044.113 Safari/537.36"
  },
  "autocomplete_steps": [
    {
      "command": "load",
      "url": "https://www.imdb.com/search/title/?title=$INPUT&title_type=feature,tv_movie,tv_special,short&adult=include",
      "description": "Searches movies by title"
    },
    {
      "command": "store_text",
      "locator": "#main > div > div.lister.list.detail.sub-list > div > div:nth-child(1) > div.lister-item-content > h3",
      "output": {
        "name": "TITLE1"
      }
    },
    {
      "command": "regex",
      "input": "$TITLE1",
      "expression": "(?<=\\.\\s).+",
      "output": {
        "name": "TITLE1"
      },
      "description": "Applies a regular expression to get just the title without the ennum"
    },
    {
      "command": "store_text",
      "locator": "#main > div > div.lister.list.detail.sub-list > div > div:nth-child(2) > div.lister-item-content > h3",
      "output": {
        "name": "TITLE2"
      }
    },
    {
      "command": "regex",
      "input": "$TITLE2",
      "expression": "(?<=\\.\\s).+",
      "output": {
        "name": "TITLE2"
      },
      "description": "Applies a regular expression to get just the title without the ennum"
    },
    {
      "command": "store_text",
      "locator": "#main > div > div.lister.list.detail.sub-list > div > div:nth-child(3) > div.lister-item-content > h3",
      "output": {
        "name": "TITLE3"
      }
    },
    {
      "command": "regex",
      "input": "$TITLE3",
      "expression": "(?<=\\.\\s).+",
      "output": {
        "name": "TITLE3"
      },
      "description": "Applies a regular expression to get just the title without the ennum"
    },
    {
      "command": "store_text",
      "locator": "#main > div > div.lister.list.detail.sub-list > div > div:nth-child(4) > div.lister-item-content > h3",
      "output": {
        "name": "TITLE4"
      }
    },
    {
      "command": "regex",
      "input": "$TITLE4",
      "expression": "(?<=\\.\\s).+",
      "output": {
        "name": "TITLE4"
      },
      "description": "Applies a regular expression to get just the title without the ennum"
    },
    {
      "command": "store_text",
      "locator": "#main > div > div.lister.list.detail.sub-list > div > div:nth-child(5) > div.lister-item-content > h3",
      "output": {
        "name": "TITLE5"
      }
    },
    {
      "command": "regex",
      "input": "$TITLE5",
      "expression": "(?<=\\.\\s).+",
      "output": {
        "name": "TITLE5"
      },
      "description": "Applies a regular expression to get just the title without the ennum"
    },
    {
      "command": "store_text",
      "locator": "#main > div > div.lister.list.detail.sub-list > div > div:nth-child(6) > div.lister-item-content > h3",
      "output": {
        "name": "TITLE6"
      }
    },
    {
      "command": "regex",
      "input": "$TITLE6",
      "expression": "(?<=\\.\\s).+",
      "output": {
        "name": "TITLE6"
      },
      "description": "Applies a regular expression to get just the title without the ennum"
    },
    {
      "command": "store_attribute",
      "locator": "#main > div > div.lister.list.detail.sub-list > div > div:nth-child(1) > div.lister-item-content > h3 > a",
      "attribute_name": "href",
      "output": {
        "name": "URL1"
      }
    },
    {
      "command": "store",
      "input": "https://m.imdb.com$URL1",
      "output": {
        "name": "URL1"
      }
    },
    {
      "command": "store_attribute",
      "locator": "#main > div > div.lister.list.detail.sub-list > div > div:nth-child(2) > div.lister-item-content > h3 > a",
      "attribute_name": "href",
      "output": {
        "name": "URL2"
      }
    },
    {
      "command": "store",
      "input": "https://m.imdb.com$URL2",
      "output": {
        "name": "URL2"
      }
    },
    {
      "command": "store_attribute",
      "locator": "#main > div > div.lister.list.detail.sub-list > div > div:nth-child(3) > div.lister-item-content > h3 > a",
      "attribute_name": "href",
      "output": {
        "name": "URL3"
      }
    },
    {
      "command": "store",
      "input": "https://m.imdb.com$URL3",
      "output": {
        "name": "URL3"
      }
    },
    {
      "command": "store_attribute",
      "locator": "#main > div > div.lister.list.detail.sub-list > div > div:nth-child(4) > div.lister-item-content > h3 > a",
      "attribute_name": "href",
      "output": {
        "name": "URL4"
      }
    },
    {
      "command": "store",
      "input": "https://m.imdb.com$URL4",
      "output": {
        "name": "URL4"
      }
    },
    {
      "command": "store_attribute",
      "locator": "#main > div > div.lister.list.detail.sub-list > div > div:nth-child(5) > div.lister-item-content > h3 > a",
      "attribute_name": "href",
      "output": {
        "name": "URL5"
      }
    },
    {
      "command": "store",
      "input": "https://m.imdb.com$URL5",
      "output": {
        "name": "URL5"
      }
    },
    {
      "command": "store_attribute",
      "locator": "#main > div > div.lister.list.detail.sub-list > div > div:nth-child(6) > div.lister-item-content > h3 > a",
      "attribute_name": "href",
      "output": {
        "name": "URL6"
      }
    },
    {
      "command": "store",
      "input": "https://m.imdb.com$URL6",
      "output": {
        "name": "URL6"
      }
    }
  ],
  "url_steps": [
    {
      "command": "load",
      "url": "$INPUT",
      "description": "Load the url of the movie"
    },
    {
      "command": "store_url",
      "output": {
        "name": "URL"
      },
      "description": "Saves the URL of the detail"
    },
    {
      "command": "store_attribute",
      "locator": "meta[property='og:title']",
      "attribute_name": "content",
      "output": {
        "name": "TITLE"
      },
      "description": "Takes the title of the movie including the year"
    },
    {
      "command": "regex",
      "input": "$TITLE",
      "expression": "(?<=\\()\\d\\d\\d\\d(?=\\))",
      "output": {
        "name": "DATE",
        "type": "date",
        "format": "YYYY",
        "show": true
      },
      "description": "Applies a regular expression to get just the year of the date"
    },
    {
      "command": "regex",
      "input": "$TITLE",
      "expression": "[^\\(]*",
      "output": {
        "name": "TITLE",
        "type": "string",
        "show": true
      },
      "description": "Applies a regular expression to get just the title of the movie before the year"
    },
    {
      "command": "store_attribute",
      "locator": "meta[name='description']",
      "attribute_name": "content",
      "output": {
        "name": "DESCRIPTION",
        "type": "string",
        "show": true
      },
      "description": "Saves temporary the actors, director and description"
    },
    {
      "command": "store_text",
      "locator": "div[data-testid*=hero-rating-bar__aggregate-rating__score]",
      "output": {
        "name": "RATING",
        "type": "string"
      },
      "description": "Saves the rating of the movie"
    },
    {
      "command": "regex",
      "input": "$RATING",
      "expression": "([0-9,\\.]+)",
      "output": {
        "name": "RATING",
        "type": "float",
        "show": true
      },
      "description": "Applies a regular expression to get part of the rating"
    },
    {
      "command": "store_text",
      "locator": "li[data-testid*=title-pc-principal-credit] > div > ul >li",
      "output": {
        "name": "AUTHOR",
        "type": "string",
        "show": true
      },
      "description": "Saves the director of the movie"
    },
    {
      "command": "store_attribute",
      "locator": "meta[property='og:image']",
      "attribute_name": "content",
      "output": {
        "name": "COVER"
      },
      "description": "Saves the image"
    },
    {
      "command": "regex",
      "input": "$COVER",
      "expression": ".+?images.+?[\\.]",
      "output": {
        "name": "COVER"
      },
      "description": "Applies a regular expression to get part of the cover"
    },
    {
      "command": "store",
      "input": "$COVER._V1_.jpg",
      "output": {
        "name": "COVER",
        "type": "string",
        "show": true
      },
      "description": "Add high res param to the cover"
    }
  ]
}
