{
  "recipe_shortcut": "gr_books",
  "list_type": "books",
  "engine_version": 14,
  "title": "Goodreads",
  "description": "A recipe to get a list of books from Goodreads",
  "urls": [
    "https://www.goodreads.com",
    "www.goodreads.com",
    "http://www.goodreads.com"
  ],
  "headers": {
    "Accept-Language": "en-UK,en",
    "User-Agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_2) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/81.0.4044.113 Safari/537.36"
  },
  "autocomplete_steps": [
    {
      "command": "load",
      "url": "https://www.goodreads.com/book/auto_complete?format=html&q=$INPUT",
      "config": {
        "js": true
      },
      "description": "Searches books by title"
    },
    {
      "command": "store_attribute",
      "locator": "body > ul > li:nth-child(1) img",
      "attribute_name": "src",
      "output": {
        "name": "COVER1"
      }
    },
    {
      "command": "store_text",
      "locator": "body > ul > li:nth-child(1) .title",
      "output": {
        "name": "LINE1"
      }
    },
    {
      "command": "regex",
      "input": "$LINE1",
      "expression": ".+?(?=\\,\\sby|$)",
      "output": {
        "name": "TITLE1"
      }
    },
    {
      "command": "regex",
      "input": "$LINE1",
      "expression": "(?<=\\,\\sby).+",
      "output": {
        "name": "SUBTITLE1"
      }
    },
    {
      "command": "regex",
      "input": "$SUBTITLE1",
      "expression": ".+?(?=ISBN|$)",
      "output": {
        "name": "SUBTITLE1"
      }
    },
    {
      "command": "store_attribute",
      "locator": "body > ul > li:nth-child(2) img",
      "attribute_name": "src",
      "output": {
        "name": "COVER2"
      }
    },
    {
      "command": "store_text",
      "locator": "body > ul > li:nth-child(2) .title",
      "output": {
        "name": "LINE2"
      }
    },
    {
      "command": "regex",
      "input": "$LINE2",
      "expression": ".+?(?=\\,\\sby|$)",
      "output": {
        "name": "TITLE2"
      }
    },
    {
      "command": "regex",
      "input": "$LINE2",
      "expression": "(?<=\\,\\sby).+",
      "output": {
        "name": "SUBTITLE2"
      }
    },
    {
      "command": "regex",
      "input": "$SUBTITLE2",
      "expression": ".+?(?=ISBN|$)",
      "output": {
        "name": "SUBTITLE2"
      }
    },
    {
      "command": "store_attribute",
      "locator": "body > ul > li:nth-child(3) img",
      "attribute_name": "src",
      "output": {
        "name": "COVER3"
      }
    },
    {
      "command": "store_text",
      "locator": "body > ul > li:nth-child(3) .title",
      "output": {
        "name": "LINE3"
      }
    },
    {
      "command": "regex",
      "input": "$LINE3",
      "expression": ".+?(?=\\,\\sby|$)",
      "output": {
        "name": "TITLE3"
      }
    },
    {
      "command": "regex",
      "input": "$LINE3",
      "expression": "(?<=\\,\\sby).+",
      "output": {
        "name": "SUBTITLE3"
      }
    },
    {
      "command": "regex",
      "input": "$SUBTITLE3",
      "expression": ".+?(?=ISBN|$)",
      "output": {
        "name": "SUBTITLE3"
      }
    },
    {
      "command": "store_attribute",
      "locator": "body > ul > li:nth-child(4) img",
      "attribute_name": "src",
      "output": {
        "name": "COVER4"
      }
    },
    {
      "command": "store_text",
      "locator": "body > ul > li:nth-child(4) .title",
      "output": {
        "name": "LINE4"
      }
    },
    {
      "command": "regex",
      "input": "$LINE4",
      "expression": ".+?(?=\\,\\sby|$)",
      "output": {
        "name": "TITLE4"
      }
    },
    {
      "command": "regex",
      "input": "$LINE4",
      "expression": "(?<=\\,\\sby).+",
      "output": {
        "name": "SUBTITLE4"
      }
    },
    {
      "command": "regex",
      "input": "$SUBTITLE4",
      "expression": ".+?(?=ISBN|$)",
      "output": {
        "name": "SUBTITLE4"
      }
    },
    {
      "command": "store_attribute",
      "locator": "body > ul > li:nth-child(5) img",
      "attribute_name": "src",
      "output": {
        "name": "COVER5"
      }
    },
    {
      "command": "store_text",
      "locator": "body > ul > li:nth-child(5) .title",
      "output": {
        "name": "LINE5"
      }
    },
    {
      "command": "regex",
      "input": "$LINE5",
      "expression": ".+?(?=\\,\\sby|$)",
      "output": {
        "name": "TITLE5"
      }
    },
    {
      "command": "regex",
      "input": "$LINE5",
      "expression": "(?<=\\,\\sby).+",
      "output": {
        "name": "SUBTITLE5"
      }
    },
    {
      "command": "regex",
      "input": "$SUBTITLE5",
      "expression": ".+?(?=ISBN|$)",
      "output": {
        "name": "SUBTITLE5"
      }
    },
    {
      "command": "regex",
      "input": "$LINE1",
      "expression": "(?<=ISBN\\s).+",
      "output": {
        "name": "ISBN1"
      }
    },
    {
      "command": "store",
      "input": "https://www.goodreads.com/book/auto_complete?format=json&q=$ISBN1",
      "output": {
        "name": "URL1"
      }
    },
    {
      "command": "regex",
      "input": "$LINE2",
      "expression": "(?<=ISBN\\s).+",
      "output": {
        "name": "ISBN2"
      }
    },
    {
      "command": "store",
      "input": "https://www.goodreads.com/book/auto_complete?format=json&q=$ISBN2",
      "output": {
        "name": "URL2"
      }
    },
    {
      "command": "regex",
      "input": "$LINE3",
      "expression": "(?<=ISBN\\s).+",
      "output": {
        "name": "ISBN3"
      }
    },
    {
      "command": "store",
      "input": "https://www.goodreads.com/book/auto_complete?format=json&q=$ISBN3",
      "output": {
        "name": "URL3"
      }
    },
    {
      "command": "regex",
      "input": "$LINE4",
      "expression": "(?<=ISBN\\s).+",
      "output": {
        "name": "ISBN4"
      }
    },
    {
      "command": "store",
      "input": "https://www.goodreads.com/book/auto_complete?format=json&q=$ISBN4",
      "output": {
        "name": "URL4"
      }
    },
    {
      "command": "regex",
      "input": "$LINE5",
      "expression": "(?<=ISBN\\s).+",
      "output": {
        "name": "ISBN5"
      }
    },
    {
      "command": "store",
      "input": "https://www.goodreads.com/book/auto_complete?format=json&q=$ISBN5",
      "output": {
        "name": "URL5"
      }
    }
  ],
  "url_steps": [
    {
      "command": "api_request",
      "output": {
        "name": "JSON"
      },
      "url": "$INPUT",
      "config": {
        "method": "GET"
      },
      "description": "Retreives a JSON with output of book"
    },
    {
      "command": "json_store_text",
      "locator": "[0].description.fullContentUrl",
      "input": "$JSON",
      "output": {
        "name": "URL",
        "type": "string"
      },
      "description": "Saves the first description."
    },
    {
      "command": "json_store_text",
      "locator": "[0].imageUrl",
      "input": "$JSON",
      "output": {
        "name": "COVER",
        "type": "string",
        "show": true
      },
      "description": "Saves the first cover."
    },
    {
      "command": "json_store_text",
      "locator": "[0].title",
      "input": "$JSON",
      "output": {
        "name": "TITLE",
        "type": "string",
        "show": true
      },
      "description": "Saves the title."
    },
    {
      "command": "json_store_text",
      "locator": "[0].description.html",
      "input": "$JSON",
      "output": {
        "name": "DESCRIPTION",
        "type": "string",
        "show": true
      },
      "description": "Saves the description."
    },
    {
      "command": "json_store_text",
      "locator": "[0].author.name",
      "input": "$JSON",
      "output": {
        "name": "AUTHOR",
        "type": "string",
        "show": true
      },
      "description": "Saves the author."
    },
    {
      "command": "json_store_text",
      "locator": "[0].avgRating",
      "input": "$JSON",
      "output": {
        "name": "RATING",
        "type": "float",
        "show": true
      },
      "description": "Saves the rating."
    },
    {
      "command": "json_store_text",
      "locator": "[0].numPages",
      "input": "$JSON",
      "output": {
        "name": "PAGES",
        "type": "float",
        "show": true
      },
      "description": "Saves the number pages."
    }
  ]
}
